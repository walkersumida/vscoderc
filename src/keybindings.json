[
    // https://github.com/VSCodeVim/Vim/issues/1323#issuecomment-1820784630
    {
        "key": "up",
        "command": "cursorUp",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "cursorDown",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "k",
        "command": "cursorUp",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "j",
        "command": "cursorDown",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+.",
        "command": "macros.rerunCommand"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "key": "ctrl+y",
        "command": "execPaste",
        "when": "!editorTextFocus && !inDebugRepl"
    },
    {
        "key": "ctrl+y",
        "command": "extension.vim_ctrl+v",
        "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
    },
    {
        "key": "ctrl+y",
        "command": "execPaste",
        "when": "filesExplorerFocus && inputFocus"
    },
    {
        "key": "ctrl+y",
        "command": "execPaste",
        "when": "searchViewletFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "shift+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+space",
        "command": "workbench.action.terminal.runRecentCommand",
        "when": "terminalFocus"
    },
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "textInputFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "shift+cmd+j",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "!searchViewletFocus"
    },
    {
        "key": "ctrl+]",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+]",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "cmd+o",
        "command": "editor.action.openLink"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.quickOpen",
        "when": "!inputFocus || editorTextFocus && (neovim.mode == 'normal' || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.quickOpen",
        "when": "!inputFocus || editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "Enter",
        "command": "search.action.openInEditor",
        "when": "hasSearchResult && searchViewletFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+d",
        "command": "deleteRight",
        "when": "editorTextFocus && (neovim.mode == insert || vim.mode == 'Insert')"
    },
    {
        "key": "ctrl+k",
        "command": "deleteAllRight",
        "when": "editorTextFocus && (neovim.mode == insert || vim.mode == 'Insert')"
    },
    {
        "key": "ctrl+n",
        "command": "search.action.focusNextSearchResult",
        "when": "inSearchEditor && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+p",
        "command": "search.action.focusPreviousSearchResult",
        "when": "inSearchEditor && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "space",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "Enter",
        "command": "list.select",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.select",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "Enter",
        "command": "list.toggleExpand",
        "when": "explorerViewletFocus && explorerViewletVisible && explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.view.explorer",
        "when": "openEditorsFocus"
    },
    {
        "key": "g h",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+i",
        "command": "tab",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && (neovim.mode == insert || vim.mode == 'Insert')"
    },
    {
        "key": "ctrl+o",
        "command": "cursorUndo",
        "when": "neovim.mode == normal || vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+i",
        "command": "cursorRedo",
        "when": "neovim.mode == normal || vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "neovim.mode == normal || vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "neovim.mode == normal || vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.debug.action.focusVariablesView",
        "when": "!inputFocus && inDebugMode"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor' || neovim.mode == normal && editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor' || vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "explorerViewletFocus && explorerViewletVisible || (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+cmd+h",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "editorTextFocus && (neovim.mode == insert || vim.mode == 'Insert')"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "editorTextFocus && (neovim.mode == insert || vim.mode == 'Insert')"
    },
    {
        "key": "s s",
        "command": "workbench.action.splitEditorDown",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "s h",
        "command": "workbench.action.splitEditorDown",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "s v",
        "command": "workbench.action.splitEditorRight",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+w o",
        "command": "workbench.action.closeEditorsInOtherGroups",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+w c",
        "command": "workbench.action.closeEditorsInGroup",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+e l",
        "command": "workbench.action.increaseViewWidth",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+e h",
        "command": "workbench.action.decreaseViewWidth",
        "when": "editorTextFocus && (neovim.mode == normal || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+e k",
        "command": "workbench.action.increaseViewSize",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+e j",
        "command": "workbench.action.decreaseViewSize",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "m r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "m c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "m p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "m a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "m d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "m f",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    }
]
